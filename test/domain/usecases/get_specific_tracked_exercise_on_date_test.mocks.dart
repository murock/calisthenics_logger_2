// Mocks generated by Mockito 5.0.12 from annotations
// in calisthenics_logger_2/test/domain/usecases/get_specific_tracked_exercise_on_date_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:calisthenics_logger_2/core/error/failures.dart' as _i5;
import 'package:calisthenics_logger_2/domain/entities/tracked_exercise.dart'
    as _i6;
import 'package:calisthenics_logger_2/domain/repos/tracked_exercise_repo.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [TrackedExerciseRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrackedExerciseRepo extends _i1.Mock
    implements _i3.TrackedExerciseRepo {
  MockTrackedExerciseRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.GroupedTrackedExercises>>
      getSpecificTrackedExerciseOnDate(String? exercise, DateTime? date) =>
          (super.noSuchMethod(
              Invocation.method(
                  #getSpecificTrackedExerciseOnDate, [exercise, date]),
              returnValue:
                  Future<_i2.Either<_i5.Failure, _i6.GroupedTrackedExercises>>.value(
                      _FakeEither<_i5.Failure, _i6.GroupedTrackedExercises>())) as _i4
              .Future<_i2.Either<_i5.Failure, _i6.GroupedTrackedExercises>>);
}

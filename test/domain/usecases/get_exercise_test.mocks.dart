// Mocks generated by Mockito 5.0.7 from annotations
// in calisthenics_logger_2/test/domain/usecases/get_exercise_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:calisthenics_logger_2/core/error/failures.dart' as _i5;
import 'package:calisthenics_logger_2/domain/entities/exercise.dart' as _i6;
import 'package:calisthenics_logger_2/domain/repos/exercise_repo.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ExerciseRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockExerciseRepo extends _i1.Mock implements _i3.ExerciseRepo {
  MockExerciseRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Exercise>> getExercise(
          String? exerciseName) =>
      (super.noSuchMethod(Invocation.method(#getExercise, [exerciseName]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Exercise>>.value(
                  _FakeEither<_i5.Failure, _i6.Exercise>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Exercise>>);
}
